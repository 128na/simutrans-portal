# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [master]
    tags: ["**"]
  pull_request:
    branches: [master, develop]
jobs:
  stan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: .env
        run: php -r "copy('.env.ci', '.env');"

      - uses: ./.github/actions/php

      - name: Run PHP Stan
        run: composer run stan

  test:
    needs: [stan]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_suite: [Unit, Feature]
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: .env
        run: php -r "copy('.env.ci', '.env');"

      - uses: ./.github/actions/php
      - uses: ./.github/actions/nodejs
      - uses: ./.github/actions/mysql
        if: matrix.test_suite == 'Feature'

      - name: Test
        run: php artisan test --env=local --testsuite=${{ matrix.test_suite }}

      - name: Upload Laravel Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: TestLaravelLog-${{ matrix.test_suite }}
          path: storage/logs

  # dusk:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: install japanese font
  #       run: sudo apt-get install -y fonts-ipafont && fc-cache -fv install

  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: .env
  #       run: php -r "copy('.env.dusk.ci', '.env');copy('frontend/.env.dusk.ci', 'frontend/.env');"

  #     - uses: ./.github/actions/php
  #     - uses: ./.github/actions/nodejs
  #       with:
  #         asset-key: "dusk"
  #     - uses: ./.github/actions/mysql

  #     - name: Storage link
  #       run: php artisan storage:link

  #     - name: Upgrade Chrome Driver
  #       run: php artisan dusk:chrome-driver --detect

  #     - name: Start Chrome Driver
  #       run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

  #     - name: Run Laravel Server
  #       run: php -S 127.0.0.1:8000 -t public/ > /dev/null 2>&1 &

  #     - name: Run Dusk Tests
  #       run: |
  #         chmod -R 0755 vendor/laravel/dusk/bin/
  #         php artisan dusk

  #     - name: Upload Screenshots
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: DuskScreenshots
  #         path: |
  #           tests/Browser/screenshots
  #           tests/Browser/console
  #           storage/logs

  cy:
    runs-on: ubuntu-latest
    steps:
      - name: install japanese font
        run: sudo apt-get install -y fonts-ipafont && fc-cache -fv install

      - name: Checkout
        uses: actions/checkout@v4

      - name: .env
        run: php -r "copy('frontend/.env.dusk.ci', 'frontend/.env');"

      - uses: ./.github/actions/nodejs
        with:
          asset-key: "dusk"

      - name: Run Cypress
        run: cd frontend && npm run test:e2e:ci

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: CypressScreenshots
          path: |
            frontend/test/cypress/videos
            frontend/test/cypress/screenshots

  deploy:
    # tag push -> テスト通過後デプロイ
    needs: [stan, test, dusk, cy]
    if: ${{ success() && startsWith( github.ref, 'refs/tags/' ) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: .env
        run: php -r "copy('.env.deploy', '.env');copy('frontend/.env.deploy', 'frontend/.env');"

      - name: set app version
        run: sed -i "s/APP_VERSION=.*/APP_VERSION=$( git describe --tags --abbrev=0 )/" frontend/.env

      - uses: ./.github/actions/nodejs
        with:
          asset-key: "deploy"

      - name: Install SSH key
        run: >
          mkdir -p ~/.ssh
          && echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          && chmod 0600 ~/.ssh/id_rsa
          && echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
      - name: Deploy
        run: >
          ssh -i /home/runner/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.HOST }} "
          cd ${{ secrets.APP_DIR }}
          && git fetch -p
          && git checkout ${{ github.ref }}
          && bash -c 'sed -i ".bak" "s/APP_VERSION=.*/APP_VERSION=$( git describe --tags --abbrev=0 )/" .env'
          && php -c ~/www/php.ini ~/bin/composer.phar install --optimize-autoloader --no-dev
          && php -c ~/www/php.ini artisan migrate --force
          && php -c ~/www/php.ini artisan migrate:status
          && php -c ~/www/php.ini artisan optimize:clear
          && php -c ~/www/php.ini artisan optimize
          && php -c ~/www/php.ini artisan event:cache
          && php -c ~/www/php.ini artisan view:cache
          && php -c ~/www/php.ini artisan article:json"

      - name: rsync assets
        run: >
          rsync -ah -e "ssh -i /home/runner/.ssh/id_rsa" ./public/
          ${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.APP_DIR }}/public

      - name: publish sourcemap to newrelic
        run: cd frontend && npm run nr:s
        env:
          NR_USER_KEY: ${{ secrets.NR_USER_KEY }}
